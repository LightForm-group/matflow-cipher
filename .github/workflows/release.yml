name: release
concurrency: release

env:
  PYTHON_VERSION_BUMP: 3.9
  PYTHON_VERSION_RELEASE: 3.9

on:
  workflow_dispatch: 
  # pull_request_target:
  #   branches: [main]
  #   types: [closed]

jobs:
  bump-version:
    if:
      | # skip if: trying to re-run; PR is closed without merging; '[skip release]' is in the PR title; or if merging into any branch other main
      (
        github.run_attempt == '1'
        && github.event.pull_request.merged
        && ! contains(github.event.pull_request.title, '[skip release]')
      )
    runs-on: ubuntu-latest
    outputs:
      new_tag_name: ${{ steps.get_new_tag.outputs.new_tag_name }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # get all history and tags
          ref: ${{ github.event.pull_request.base.ref }}
          token: ${{ secrets.LIGHTFORM_ACTIONS_TOKEN }}

      - run: |
          git config user.name lightform-bot
          git config user.email lightform-bot@users.noreply.github.com

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION_BUMP }}

      - name: Get git-chglog executable
        run: |
          wget https://github.com/git-chglog/git-chglog/releases/download/v0.15.0/git-chglog_0.15.0_linux_amd64.tar.gz
          tar --extract --file git-chglog_0.15.0_linux_amd64.tar.gz git-chglog

      - name: Install commitizen
        run: pip install commitizen

      - name: Get current tag
        run: |
          CUR_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "CUR_TAG is: $CUR_TAG"
          echo "cur_tag=$CUR_TAG" >> $GITHUB_ENV

      - name: Commitizen bump
        run: cz bump

      - name: Get new tag
        id: get_new_tag
        run: |
          NEW_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "NEW_TAG is: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_ENV
          echo "::set-output name=new_tag_name::$NEW_TAG"

      - name: Generate CHANGELOG (stable release)
        if: github.event.pull_request.base.ref == 'main'
        run: |
          ./git-chglog --output CHANGELOG.md
          git add CHANGELOG.md

      - name: Push new CHANGELOG
        run: |
          git tag -d ${{ env.new_tag }}
          git commit --amend --no-edit
          git tag ${{ env.new_tag }}
          git push && git push origin ${{ env.new_tag }}

      - name: Generate incremental CHANGELOG for GitHub release body (stable release)
        if: github.event.pull_request.base.ref == 'main'
        run: |
          ./git-chglog --template .chglog/RELEASE.tpl.md --output CHANGELOG_increment.md ${{ env.cur_tag }}..
          cat CHANGELOG_increment.md

      - uses: actions/upload-artifact@v2
        with:
          name: CHANGELOG_increment
          path: CHANGELOG_increment.md

  release-github-PyPI:
    needs: [bump-version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.ref }} # otherwise we get the ref when the workflow started (missing above commit)

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION_RELEASE }}

      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: venv-release-${{ hashFiles('**/poetry.lock') }}

      - name: Install poetry
        run: python -m pip install poetry==1.1.11

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: poetry install

      - name: Build (for PyPI)
        run: poetry build

      - run: mkdir release-artifacts

      - uses: actions/download-artifact@v2
        with:
          path: release-artifacts

      - name: Display structure of downloaded files
        run: ls -R

      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          body_path: release-artifacts/CHANGELOG_increment/CHANGELOG_increment.md
          tag_name: ${{ needs.bump-version.outputs.new_tag_name }}

      - name: Publish (to https://upload.pypi.org/legacy/)
        run: |
          poetry config repositories.pypi https://upload.pypi.org/legacy/
          poetry config pypi-token.pypi ${{ secrets.PYPI_MATFLOW_CIPHER }}
          poetry publish --repository pypi
